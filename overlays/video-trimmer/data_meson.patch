diff --git a/data/meson.build b/data/meson.build
index 0e488af..ef19790 100644
--- a/data/meson.build
+++ b/data/meson.build
@@ -1,60 +1,74 @@
 subdir('icons')
-
-data_conf = configuration_data()
-data_conf.set('app_id', app_id)
-
-desktop_file = i18n.merge_file(
+# Desktop file
+desktop_conf = configuration_data()
+desktop_conf.set('icon', application_id)
+desktop_file = i18n.merge_file (
+  type: 'desktop',
   input: configure_file(
-    input: base_id + '.desktop.in.in',
+    input: '@0@.desktop.in.in'.format(base_id),
     output: '@BASENAME@',
-    configuration: data_conf
+    configuration: desktop_conf
   ),
-  output: app_id + '.desktop',
-  type: 'desktop',
-  po_dir: '../po',
+  output: '@0@.desktop'.format(application_id),
+  po_dir: podir,
   install: true,
-  install_dir: get_option('datadir') / 'applications'
+  install_dir: datadir / 'applications'
 )
-
-desktop_utils = find_program('desktop-file-validate', required: false)
-if desktop_utils.found()
-  test('Validate desktop file', desktop_utils,
-    args: [desktop_file]
+# Validate Desktop file
+if desktop_file_validate.found()
+  test(
+    'validate-desktop',
+    desktop_file_validate,
+    args: [
+      desktop_file.full_path()
+    ]
   )
 endif
 
-appstream_file = i18n.merge_file(
+# Appdata
+appdata_conf = configuration_data()
+appdata_conf.set('app-id', application_id)
+appdata_conf.set('gettext-package', gettext_package)
+appdata_file = i18n.merge_file (
   input: configure_file(
-    input: base_id + '.metainfo.xml.in.in',
+    input: '@0@.metainfo.xml.in.in'.format(base_id),
     output: '@BASENAME@',
-    configuration: data_conf
+    configuration: appdata_conf
   ),
-  output: app_id + '.metainfo.xml',
-  po_dir: '../po',
+  output: '@0@.metainfo.xml'.format(application_id),
+  po_dir: podir,
   install: true,
-  install_dir: get_option('datadir') / 'metainfo'
+  install_dir: datadir / 'metainfo'
 )
-
-appstream_util = find_program('appstream-util', required: false)
+# Validate Appdata
 if appstream_util.found()
-  test('Validate appstream file', appstream_util,
-    args: ['validate-relax', appstream_file]
+  test(
+    'validate-appdata', appstream_util,
+    args: [
+      'validate', '--nonet', appdata_file.full_path()
+    ]
   )
 endif
 
-gschema_file = configure_file(
-  input: base_id + '.gschema.xml.in',
-  output: app_id + '.gschema.xml',
-  configuration: data_conf
-)
-
-install_data(gschema_file,
-  install_dir: get_option('datadir') / 'glib-2.0' / 'schemas'
+# GSchema
+gschema_conf = configuration_data()
+gschema_conf.set('app-id', application_id)
+gschema_conf.set('gettext-package', gettext_package)
+configure_file(
+    input: '@0@.gschema.xml.in'.format(base_id),
+    output: '@0@.gschema.xml'.format(application_id),
+    configuration: gschema_conf,
+    install: true,
+    install_dir: datadir / 'glib-2.0' / 'schemas'
 )
 
-compile_schemas = find_program('glib-compile-schemas', required: false)
-if compile_schemas.found()
-  test('Validate schema file', compile_schemas,
-    args: ['--strict', '--dry-run', meson.current_source_dir()]
+# Validata GSchema
+if glib_compile_schemas.found()
+  test(
+    'validate-gschema', glib_compile_schemas,
+    args: [
+      '--strict', '--dry-run', meson.current_source_dir()
+    ]
   )
 endif
+
